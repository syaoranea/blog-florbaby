{
  "Parameters": {
    "DynamoDBModelTableReadIOPS": {
      "Type": "Number",
      "Default": 5,
      "Description": "The number of read IOPS the table should support."
    },
    "DynamoDBModelTableWriteIOPS": {
      "Type": "Number",
      "Default": 5,
      "Description": "The number of write IOPS the table should support."
    },
    "DynamoDBBillingMode": {
      "Type": "String",
      "Default": "PAY_PER_REQUEST",
      "AllowedValues": [
        "PAY_PER_REQUEST",
        "PROVISIONED"
      ],
      "Description": "Configure @model types to create DynamoDB tables with PAY_PER_REQUEST or PROVISIONED billing modes."
    },
    "DynamoDBEnablePointInTimeRecovery": {
      "Type": "String",
      "Default": "false",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Whether to enable Point in Time Recovery on the table."
    },
    "DynamoDBEnableServerSideEncryption": {
      "Type": "String",
      "Default": "true",
      "AllowedValues": [
        "true",
        "false"
      ],
      "Description": "Enable server side encryption powered by KMS."
    },
    "referencetotransformerrootstackenv10C5A902Ref": {
      "Type": "String"
    },
    "referencetotransformerrootstackGraphQLAPI20497F53ApiId": {
      "Type": "String"
    },
    "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name": {
      "Type": "String"
    },
    "referencetotransformerrootstackS3DeploymentBucket7592718ARef": {
      "Type": "String"
    },
    "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref": {
      "Type": "String"
    }
  },
  "Conditions": {
    "HasEnvironmentParameter": {
      "Fn::Not": [
        {
          "Fn::Equals": [
            {
              "Ref": "referencetotransformerrootstackenv10C5A902Ref"
            },
            "NONE"
          ]
        }
      ]
    },
    "ShouldUseServerSideEncryption": {
      "Fn::Equals": [
        {
          "Ref": "DynamoDBEnableServerSideEncryption"
        },
        "true"
      ]
    },
    "ShouldUsePayPerRequestBilling": {
      "Fn::Equals": [
        {
          "Ref": "DynamoDBBillingMode"
        },
        "PAY_PER_REQUEST"
      ]
    },
    "ShouldUsePointInTimeRecovery": {
      "Fn::Equals": [
        {
          "Ref": "DynamoDBEnablePointInTimeRecovery"
        },
        "true"
      ]
    }
  },
  "Resources": {
    "PostagemTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "AttributeDefinitions": [
          {
            "AttributeName": "id",
            "AttributeType": "S"
          }
        ],
        "BillingMode": {
          "Fn::If": [
            "ShouldUsePayPerRequestBilling",
            "PAY_PER_REQUEST",
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "KeySchema": [
          {
            "AttributeName": "id",
            "KeyType": "HASH"
          }
        ],
        "PointInTimeRecoverySpecification": {
          "Fn::If": [
            "ShouldUsePointInTimeRecovery",
            {
              "PointInTimeRecoveryEnabled": true
            },
            {
              "Ref": "AWS::NoValue"
            }
          ]
        },
        "ProvisionedThroughput": {
          "Fn::If": [
            "ShouldUsePayPerRequestBilling",
            {
              "Ref": "AWS::NoValue"
            },
            {
              "ReadCapacityUnits": {
                "Ref": "DynamoDBModelTableReadIOPS"
              },
              "WriteCapacityUnits": {
                "Ref": "DynamoDBModelTableWriteIOPS"
              }
            }
          ]
        },
        "SSESpecification": {
          "SSEEnabled": {
            "Fn::If": [
              "ShouldUseServerSideEncryption",
              true,
              false
            ]
          }
        },
        "StreamSpecification": {
          "StreamViewType": "NEW_AND_OLD_IMAGES"
        },
        "TableName": {
          "Fn::Join": [
            "",
            [
              "Postagem-",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "-",
              {
                "Ref": "referencetotransformerrootstackenv10C5A902Ref"
              }
            ]
          ]
        }
      },
      "UpdateReplacePolicy": "Delete",
      "DeletionPolicy": "Delete"
    },
    "PostagemIAMRole370DD5B1": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Statement": [
            {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": {
                "Service": "appsync.amazonaws.com"
              }
            }
          ],
          "Version": "2012-10-17"
        },
        "Policies": [
          {
            "PolicyDocument": {
              "Statement": [
                {
                  "Action": [
                    "dynamodb:BatchGetItem",
                    "dynamodb:BatchWriteItem",
                    "dynamodb:PutItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:GetItem",
                    "dynamodb:Scan",
                    "dynamodb:Query",
                    "dynamodb:UpdateItem",
                    "dynamodb:ConditionCheckItem",
                    "dynamodb:DescribeTable",
                    "dynamodb:GetRecords",
                    "dynamodb:GetShardIterator"
                  ],
                  "Effect": "Allow",
                  "Resource": [
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}",
                        {
                          "tablename": {
                            "Fn::Join": [
                              "",
                              [
                                "Postagem-",
                                {
                                  "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                                },
                                "-",
                                {
                                  "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                }
                              ]
                            ]
                          }
                        }
                      ]
                    },
                    {
                      "Fn::Sub": [
                        "arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${tablename}/*",
                        {
                          "tablename": {
                            "Fn::Join": [
                              "",
                              [
                                "Postagem-",
                                {
                                  "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
                                },
                                "-",
                                {
                                  "Ref": "referencetotransformerrootstackenv10C5A902Ref"
                                }
                              ]
                            ]
                          }
                        }
                      ]
                    }
                  ]
                }
              ],
              "Version": "2012-10-17"
            },
            "PolicyName": "DynamoDBAccess"
          }
        ],
        "RoleName": {
          "Fn::Join": [
            "",
            [
              "PostagemIAMRolecc3fa6-",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "-",
              {
                "Ref": "referencetotransformerrootstackenv10C5A902Ref"
              }
            ]
          ]
        }
      }
    },
    "PostagemDataSource": {
      "Type": "AWS::AppSync::DataSource",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DynamoDBConfig": {
          "AwsRegion": {
            "Ref": "AWS::Region"
          },
          "TableName": {
            "Ref": "PostagemTable"
          }
        },
        "Name": "PostagemTable",
        "ServiceRoleArn": {
          "Fn::GetAtt": [
            "PostagemIAMRole370DD5B1",
            "Arn"
          ]
        },
        "Type": "AMAZON_DYNAMODB"
      },
      "DependsOn": [
        "PostagemIAMRole370DD5B1"
      ]
    },
    "QuerygetPostagempostAuth0FunctionQuerygetPostagempostAuth0FunctionAppSyncFunctionCE95420D": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Ref": "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name"
        },
        "FunctionVersion": "2018-05-29",
        "Name": "QuerygetPostagempostAuth0Function",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.getPostagem.postAuth.1.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson({})"
      }
    },
    "QueryGetPostagemDataResolverFnQueryGetPostagemDataResolverFnAppSyncFunction27DF04D6": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "PostagemDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "QueryGetPostagemDataResolverFn",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.getPostagem.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.getPostagem.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "PostagemDataSource"
      ]
    },
    "GetPostagemResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "getPostagem",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "QuerygetPostagempostAuth0FunctionQuerygetPostagempostAuth0FunctionAppSyncFunctionCE95420D",
                "FunctionId"
              ]
            },
            {
              "Fn::GetAtt": [
                "QueryGetPostagemDataResolverFnQueryGetPostagemDataResolverFnAppSyncFunction27DF04D6",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"getPostagem\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n$util.qr($ctx.stash.put(\"tableName\", \"",
              {
                "Ref": "PostagemTable"
              },
              "\"))\n$util.qr($ctx.stash.put(\"adminRoles\", []))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Query"
      }
    },
    "QueryListPostagemsDataResolverFnQueryListPostagemsDataResolverFnAppSyncFunctionE8E6E611": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "PostagemDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "QueryListPostagemsDataResolverFn",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.listPostagems.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Query.listPostagems.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "PostagemDataSource"
      ]
    },
    "ListPostagemResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "listPostagems",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "QuerygetPostagempostAuth0FunctionQuerygetPostagempostAuth0FunctionAppSyncFunctionCE95420D",
                "FunctionId"
              ]
            },
            {
              "Fn::GetAtt": [
                "QueryListPostagemsDataResolverFnQueryListPostagemsDataResolverFnAppSyncFunctionE8E6E611",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Query\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"listPostagems\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n$util.qr($ctx.stash.put(\"tableName\", \"",
              {
                "Ref": "PostagemTable"
              },
              "\"))\n$util.qr($ctx.stash.put(\"adminRoles\", []))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Query"
      }
    },
    "MutationcreatePostageminit0FunctionMutationcreatePostageminit0FunctionAppSyncFunctionD4CB52DF": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Ref": "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name"
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationcreatePostageminit0Function",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.createPostagem.init.1.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson({})"
      }
    },
    "MutationCreatePostagemDataResolverFnMutationCreatePostagemDataResolverFnAppSyncFunctionB0E9D05A": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "PostagemDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationCreatePostagemDataResolverFn",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.createPostagem.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.createPostagem.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "PostagemDataSource"
      ]
    },
    "CreatePostagemResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "createPostagem",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "MutationcreatePostageminit0FunctionMutationcreatePostageminit0FunctionAppSyncFunctionD4CB52DF",
                "FunctionId"
              ]
            },
            {
              "Fn::GetAtt": [
                "QuerygetPostagempostAuth0FunctionQuerygetPostagempostAuth0FunctionAppSyncFunctionCE95420D",
                "FunctionId"
              ]
            },
            {
              "Fn::GetAtt": [
                "MutationCreatePostagemDataResolverFnMutationCreatePostagemDataResolverFnAppSyncFunctionB0E9D05A",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Mutation\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"createPostagem\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n$util.qr($ctx.stash.put(\"tableName\", \"",
              {
                "Ref": "PostagemTable"
              },
              "\"))\n$util.qr($ctx.stash.put(\"adminRoles\", []))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Mutation"
      }
    },
    "MutationupdatePostageminit0FunctionMutationupdatePostageminit0FunctionAppSyncFunctionE86C16F1": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Ref": "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name"
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationupdatePostageminit0Function",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.updatePostagem.init.1.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson({})"
      }
    },
    "MutationUpdatePostagemDataResolverFnMutationUpdatePostagemDataResolverFnAppSyncFunction79AAE05A": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "PostagemDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationUpdatePostagemDataResolverFn",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.updatePostagem.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.updatePostagem.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "PostagemDataSource"
      ]
    },
    "UpdatePostagemResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "updatePostagem",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "MutationupdatePostageminit0FunctionMutationupdatePostageminit0FunctionAppSyncFunctionE86C16F1",
                "FunctionId"
              ]
            },
            {
              "Fn::GetAtt": [
                "QuerygetPostagempostAuth0FunctionQuerygetPostagempostAuth0FunctionAppSyncFunctionCE95420D",
                "FunctionId"
              ]
            },
            {
              "Fn::GetAtt": [
                "MutationUpdatePostagemDataResolverFnMutationUpdatePostagemDataResolverFnAppSyncFunction79AAE05A",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Mutation\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"updatePostagem\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n$util.qr($ctx.stash.put(\"tableName\", \"",
              {
                "Ref": "PostagemTable"
              },
              "\"))\n$util.qr($ctx.stash.put(\"adminRoles\", []))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Mutation"
      }
    },
    "MutationDeletePostagemDataResolverFnMutationDeletePostagemDataResolverFnAppSyncFunctionC694E6C0": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Fn::GetAtt": [
            "PostagemDataSource",
            "Name"
          ]
        },
        "FunctionVersion": "2018-05-29",
        "Name": "MutationDeletePostagemDataResolverFn",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.deletePostagem.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Mutation.deletePostagem.res.vtl"
            ]
          ]
        }
      },
      "DependsOn": [
        "PostagemDataSource"
      ]
    },
    "DeletePostagemResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "deletePostagem",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "QuerygetPostagempostAuth0FunctionQuerygetPostagempostAuth0FunctionAppSyncFunctionCE95420D",
                "FunctionId"
              ]
            },
            {
              "Fn::GetAtt": [
                "MutationDeletePostagemDataResolverFnMutationDeletePostagemDataResolverFnAppSyncFunctionC694E6C0",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Mutation\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"deletePostagem\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"AMAZON_DYNAMODB\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n$util.qr($ctx.stash.put(\"tableName\", \"",
              {
                "Ref": "PostagemTable"
              },
              "\"))\n$util.qr($ctx.stash.put(\"adminRoles\", []))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Mutation"
      }
    },
    "SubscriptionOnCreatePostagemDataResolverFnSubscriptionOnCreatePostagemDataResolverFnAppSyncFunction80D0E308": {
      "Type": "AWS::AppSync::FunctionConfiguration",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "DataSourceName": {
          "Ref": "referencetotransformerrootstackGraphQLAPINONEDS2BA9D1C8Name"
        },
        "FunctionVersion": "2018-05-29",
        "Name": "SubscriptionOnCreatePostagemDataResolverFn",
        "RequestMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Subscription.onCreatePostagem.req.vtl"
            ]
          ]
        },
        "ResponseMappingTemplateS3Location": {
          "Fn::Join": [
            "",
            [
              "s3://",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentBucket7592718ARef"
              },
              "/",
              {
                "Ref": "referencetotransformerrootstackS3DeploymentRootKeyA71EA735Ref"
              },
              "/resolvers/Subscription.onCreatePostagem.res.vtl"
            ]
          ]
        }
      }
    },
    "SubscriptiononCreatePostagemResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "onCreatePostagem",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "QuerygetPostagempostAuth0FunctionQuerygetPostagempostAuth0FunctionAppSyncFunctionCE95420D",
                "FunctionId"
              ]
            },
            {
              "Fn::GetAtt": [
                "SubscriptionOnCreatePostagemDataResolverFnSubscriptionOnCreatePostagemDataResolverFnAppSyncFunction80D0E308",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Subscription\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"onCreatePostagem\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"NONE\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n\n$util.qr($ctx.stash.put(\"adminRoles\", []))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Subscription"
      }
    },
    "SubscriptiononUpdatePostagemResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "onUpdatePostagem",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "QuerygetPostagempostAuth0FunctionQuerygetPostagempostAuth0FunctionAppSyncFunctionCE95420D",
                "FunctionId"
              ]
            },
            {
              "Fn::GetAtt": [
                "SubscriptionOnCreatePostagemDataResolverFnSubscriptionOnCreatePostagemDataResolverFnAppSyncFunction80D0E308",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Subscription\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"onUpdatePostagem\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"NONE\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n\n$util.qr($ctx.stash.put(\"adminRoles\", []))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Subscription"
      }
    },
    "SubscriptiononDeletePostagemResolver": {
      "Type": "AWS::AppSync::Resolver",
      "Properties": {
        "ApiId": {
          "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
        },
        "FieldName": "onDeletePostagem",
        "Kind": "PIPELINE",
        "PipelineConfig": {
          "Functions": [
            {
              "Fn::GetAtt": [
                "QuerygetPostagempostAuth0FunctionQuerygetPostagempostAuth0FunctionAppSyncFunctionCE95420D",
                "FunctionId"
              ]
            },
            {
              "Fn::GetAtt": [
                "SubscriptionOnCreatePostagemDataResolverFnSubscriptionOnCreatePostagemDataResolverFnAppSyncFunction80D0E308",
                "FunctionId"
              ]
            }
          ]
        },
        "RequestMappingTemplate": {
          "Fn::Join": [
            "",
            [
              "$util.qr($ctx.stash.put(\"typeName\", \"Subscription\"))\n$util.qr($ctx.stash.put(\"fieldName\", \"onDeletePostagem\"))\n$util.qr($ctx.stash.put(\"conditions\", []))\n$util.qr($ctx.stash.put(\"metadata\", {}))\n$util.qr($ctx.stash.metadata.put(\"dataSourceType\", \"NONE\"))\n$util.qr($ctx.stash.metadata.put(\"apiId\", \"",
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "\"))\n$util.qr($ctx.stash.put(\"connectionAttributes\", {}))\n\n$util.qr($ctx.stash.put(\"adminRoles\", []))\n$util.toJson({})"
            ]
          ]
        },
        "ResponseMappingTemplate": "$util.toJson($ctx.prev.result)",
        "TypeName": "Subscription"
      }
    }
  },
  "Outputs": {
    "GetAttPostagemTableStreamArn": {
      "Description": "Your DynamoDB table StreamArn.",
      "Value": {
        "Fn::GetAtt": [
          "PostagemTable",
          "StreamArn"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Join": [
            ":",
            [
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "GetAtt:PostagemTable:StreamArn"
            ]
          ]
        }
      }
    },
    "GetAttPostagemTableName": {
      "Description": "Your DynamoDB table name.",
      "Value": {
        "Ref": "PostagemTable"
      },
      "Export": {
        "Name": {
          "Fn::Join": [
            ":",
            [
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "GetAtt:PostagemTable:Name"
            ]
          ]
        }
      }
    },
    "GetAttPostagemDataSourceName": {
      "Description": "Your model DataSource name.",
      "Value": {
        "Fn::GetAtt": [
          "PostagemDataSource",
          "Name"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Join": [
            ":",
            [
              {
                "Ref": "referencetotransformerrootstackGraphQLAPI20497F53ApiId"
              },
              "GetAtt:PostagemDataSource:Name"
            ]
          ]
        }
      }
    },
    "transformerrootstackPostagemQuerygetPostagempostAuth0FunctionQuerygetPostagempostAuth0FunctionAppSyncFunction7277DAEFFunctionId": {
      "Value": {
        "Fn::GetAtt": [
          "QuerygetPostagempostAuth0FunctionQuerygetPostagempostAuth0FunctionAppSyncFunctionCE95420D",
          "FunctionId"
        ]
      }
    },
    "transformerrootstackPostagemMutationcreatePostageminit0FunctionMutationcreatePostageminit0FunctionAppSyncFunctionBEED8804FunctionId": {
      "Value": {
        "Fn::GetAtt": [
          "MutationcreatePostageminit0FunctionMutationcreatePostageminit0FunctionAppSyncFunctionD4CB52DF",
          "FunctionId"
        ]
      }
    },
    "transformerrootstackPostagemMutationupdatePostageminit0FunctionMutationupdatePostageminit0FunctionAppSyncFunction32C3307FFunctionId": {
      "Value": {
        "Fn::GetAtt": [
          "MutationupdatePostageminit0FunctionMutationupdatePostageminit0FunctionAppSyncFunctionE86C16F1",
          "FunctionId"
        ]
      }
    },
    "transformerrootstackPostagemSubscriptionOnCreatePostagemDataResolverFnSubscriptionOnCreatePostagemDataResolverFnAppSyncFunctionF925C039FunctionId": {
      "Value": {
        "Fn::GetAtt": [
          "SubscriptionOnCreatePostagemDataResolverFnSubscriptionOnCreatePostagemDataResolverFnAppSyncFunction80D0E308",
          "FunctionId"
        ]
      }
    }
  }
}